gui:
  nerdFontsVersion: "3"
  sidePanelWidth: 0.2
git:
  paging:
    externalDiffCommand: difft --color=always --display=inline --syntax-highlight=on
os:
  editPreset: 'nvim'
theme:
  activeBorderColor:
    - '#f5e0dc'
    - bold
  inactiveBorderColor:
    - '#a6adc8'
  optionsTextColor:
    - '#89b4fa'
  selectedLineBgColor:
    - '#313244'
  selectedRangeBgColor:
    - '#313244'
  cherryPickedCommitBgColor:
    - '#45475a'
  cherryPickedCommitFgColor:
    - '#f5e0dc'
  unstagedChangesColor:
    - '#f38ba8'
  defaultFgColor:
    - '#cdd6f4'
  searchingActiveBorderColor:
    - '#f9e2af'
customCommands:
  - key: "<c-v>"
    context: "global"
    description: "Create Commit"
    prompts:
      - type: "menu"
        key: "Type"
        title: "Type of change"
        options:
          - name: "build"
            description: "Changes that affect the build system or external dependencies"
            value: "build"
          - name: "feat"
            description: "A new feature"
            value: "feat"
          - name: "fix"
            description: "A bug fix"
            value: "fix"
          - name: "chore"
            description: "Other changes that don't modify src or test files"
            value: "chore"
          - name: "ci"
            description: "Changes to CI configuration files and scripts"
            value: "ci"
          - name: "docs"
            description: "Documentation only changes"
            value: "docs"
          - name: "perf"
            description: "A code change that improves performance"
            value: "perf"
          - name: "refactor"
            description: "A code change that neither fixes a bug nor adds a feature"
            value: "refactor"
          - name: "revert"
            description: "Reverts a previous commit"
            value: "revert"
          - name: "style"
            description: "Changes that do not affect the meaning of the code"
            value: "style"
          - name: "test"
            description: "Adding missing tests or correcting existing tests"
            value: "test"
      - type: "input"
        title: "message"
        key: "Message"
        initialValue: ""
      - type: "confirm"
        key: "Confirm"
        title: "Commit"
        body: "Are you sure you want to commit?"
    command: "git commit --message '[{{.Form.Type}}]: {{.Form.Message}}'"
    loadingText: "Creating conventional commit..."
    stream: true
  - key: '<c-p>'
    description: "Rebase from specific remote and branch"
    context: 'global'
    loadingText: 'Rebasing ...'
    prompts:
      - type: 'input'
        key: 'Remote'
        title: "Remote:"
        suggestions:
          preset: 'remotes'
      - type: 'input'
        key: 'RemoteBranch'
        title: "Remote branch:"
        suggestions:
          command: "git branch --remote --list '{{.Form.Remote}}/*' --format='%(refname:short)' | sed 's/{{.Form.Remote}}\\///'"
    command: git stash && git fetch {{ .Form.Remote }} {{ .Form.RemoteBranch }} && git rebase {{ .Form.Remote }}/{{ .Form.RemoteBranch }} && git stash pop
